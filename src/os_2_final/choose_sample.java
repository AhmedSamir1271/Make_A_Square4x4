/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package os_2_final;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class choose_sample extends javax.swing.JFrame {

    /**
     * Creates new form choose_sample
     */
    public choose_sample() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Make_A_Square");

        jButton1.setText("Sample1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sample2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sample3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Sample4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton3))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int[][] square =  {{ 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }};
        int[][] sq = new int[4][4]; //To store the pieces in it
        String [][] sq_str = new String[4][4]; //To convert the array from int to string type and print it to the table 
        Samples s1 = new Samples(); //To Choose the sample and get the pieces
        s1.Samples(1); //Sample(1)
        Solve q = new Solve(); //To solve the square and pieces
        q.Solve(square,s1.chooseSample());
        try {
            sq = q.get_res(); //To get the square
        } catch (InterruptedException ex) {
            Logger.getLogger(choose_sample.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //To convert the array from int to string type and print it to the table
        for (int i=0; i<sq.length; i++){
            for(int j=0; j<sq[0].length; j++){
                int x = sq[i][j];
                sq_str[i][j] = String.valueOf(x);
            }
        }
        
        //To print the all pieces in the table
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        for(String[] row : sq_str){
            tblModel.addRow(row);
        }
        
        
        /*for (int x =0;x <sq.length;x++)
            {
                for (int j=0;j<sq[0].length;j++)
                {
                    System.out.print(" " + sq[x][j]);
                    
                }
                System.out.println();
            }
        System.out.println("-----------------------------------------------------");*/
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int[][] square =  {{ 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }};
        int[][] sq = new int[4][4];
        String [][] sq_str = new String[4][4];
        Samples s1 = new Samples();
        s1.Samples(2);
        Solve q = new Solve();
        q.Solve(square,s1.chooseSample());
        try {
            sq = q.get_res();
        } catch (InterruptedException ex) {
            Logger.getLogger(choose_sample.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i=0; i<sq.length; i++){
            for(int j=0; j<sq[0].length; j++){
                int x = sq[i][j];
                sq_str[i][j] = String.valueOf(x);
            }
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        for(String[] row : sq_str){
            tblModel.addRow(row);
        }
        
        
        /*for (int x =0;x <sq.length;x++)
            {
                for (int j=0;j<sq[0].length;j++)
                {
                    System.out.print(" " + sq[x][j]);
                    
                }
                System.out.println();
            }
        System.out.println("-----------------------------------------------------");*/
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int[][] square =  {{ 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }};
        int[][] sq = new int[4][4];
        String [][] sq_str = new String[4][4];
        Samples s1 = new Samples();
        s1.Samples(3);
        Solve q = new Solve();
        q.Solve(square,s1.chooseSample());
        try {
            sq = q.get_res();
        } catch (InterruptedException ex) {
            Logger.getLogger(choose_sample.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i=0; i<sq.length; i++){
            for(int j=0; j<sq[0].length; j++){
                int x = sq[i][j];
                sq_str[i][j] = String.valueOf(x);
            }
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        for(String[] row : sq_str){
            tblModel.addRow(row);
        }
        
        
        /*for (int x =0;x <sq.length;x++)
            {
                for (int j=0;j<sq[0].length;j++)
                {
                    System.out.print(" " + sq[x][j]);
                    
                }
                System.out.println();
            }
        System.out.println("-----------------------------------------------------");*/
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int[][] square =  {{ 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }};
        int[][] sq = new int[4][4];
        String [][] sq_str = new String[4][4];
        Samples s1 = new Samples();
        s1.Samples(4);
        Solve q = new Solve();
        q.Solve(square,s1.chooseSample());
        try {
            sq = q.get_res();
        } catch (InterruptedException ex) {
            Logger.getLogger(choose_sample.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i=0; i<sq.length; i++){
            for(int j=0; j<sq[0].length; j++){
                int x = sq[i][j];
                sq_str[i][j] = String.valueOf(x);
            }
        }
        
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.setRowCount(0);
        for(String[] row : sq_str){
            tblModel.addRow(row);
        }
        
        
        /*for (int x =0;x <sq.length;x++)
            {
                for (int j=0;j<sq[0].length;j++)
                {
                    System.out.print(" " + sq[x][j]);
                    
                }
                System.out.println();
            }
        System.out.println("-----------------------------------------------------");*/
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(choose_sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(choose_sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(choose_sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(choose_sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new choose_sample().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
